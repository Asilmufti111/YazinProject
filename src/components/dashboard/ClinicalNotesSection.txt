// we will not use this file anymore...

import React from 'react';
import type { ClinicalNote } from '../../types';
import type { Dispatch, SetStateAction } from 'react';
import { Plus } from 'lucide-react';

interface Props {
    
  showNewNoteForm: boolean;
  setShowNewNoteForm: Dispatch<SetStateAction<boolean>>;
  newNote: {
    content: string;
    category: ClinicalNote['category'];
    priority: ClinicalNote['priority'];
  };
  setNewNote: Dispatch<SetStateAction<{
    content: string;
    category: ClinicalNote['category'];
    priority: ClinicalNote['priority'];
  }>>;
  clinicalNotes: ClinicalNote[];
  formatDate: (dateString: string) => string;
}

const ClinicalNotesSection: React.FC<Props> = ({
  showNewNoteForm,
  setShowNewNoteForm,
  newNote,
  setNewNote,
  clinicalNotes,
  formatDate
}) => {
  const handleSubmitNote = (e: React.FormEvent) => {
    e.preventDefault();
    // You can insert API logic here
    setShowNewNoteForm(false);
    setNewNote({
      content: '',
      category: 'General',
      priority: 'Low',
    });
  };

  const getPriorityColor = (priority: ClinicalNote['priority']) => {
    switch (priority) {
      case 'High':
        return 'text-red-600 bg-red-50';
      case 'Medium':
        return 'text-yellow-600 bg-yellow-50';
      default:
        return 'text-green-600 bg-green-50';
    }
  };

  return (
    <div className="bg-white rounded-xl shadow-sm border border-gray-100 mt-6">
      <div className="flex items-center justify-between p-6 border-b border-gray-100">
        <h2 className="text-xl font-bold text-gray-900">Clinical Notes</h2>
        <button
          onClick={() => setShowNewNoteForm(!showNewNoteForm)}
          className="flex items-center px-3 py-2 text-sm font-medium text-blue-600 hover:text-blue-700"
        >
          <Plus className="h-4 w-4 mr-1" />
          Add Note
        </button>
      </div>

      {showNewNoteForm && (
        <div className="p-6 border-b border-gray-100 bg-gray-50">
          <form onSubmit={handleSubmitNote}>
            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  Note Content
                </label>
                <textarea
                  value={newNote.content}
                  onChange={(e) =>
                    setNewNote({ ...newNote, content: e.target.value })
                  }
                  className="w-full h-32 px-3 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500"
                  placeholder="Enter clinical note..."
                />
              </div>

              <div className="grid grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    Category
                  </label>
                  <select
                    value={newNote.category}
                    onChange={(e) =>
                      setNewNote({
                        ...newNote,
                        category: e.target.value as ClinicalNote['category'],
                      })
                    }
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500"
                  >
                    <option value="General">General</option>
                    <option value="Follow-up">Follow-up</option>
                    <option value="Lab Results">Lab Results</option>
                    <option value="Treatment Plan">Treatment Plan</option>
                    <option value="Emergency">Emergency</option>
                  </select>
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-1">
                    Priority
                  </label>
                  <select
                    value={newNote.priority}
                    onChange={(e) =>
                      setNewNote({
                        ...newNote,
                        priority: e.target.value as ClinicalNote['priority'],
                      })
                    }
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-blue-500 focus:border-blue-500"
                  >
                    <option value="Low">Low</option>
                    <option value="Medium">Medium</option>
                    <option value="High">High</option>
                  </select>
                </div>
              </div>

              <div className="flex justify-end space-x-3">
                <button
                  type="button"
                  onClick={() => setShowNewNoteForm(false)}
                  className="px-4 py-2 text-sm font-medium text-gray-700 hover:text-gray-900"
                >
                  Cancel
                </button>
                <button
                  type="submit"
                  className="px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700"
                >
                  Save Note
                </button>
              </div>
            </div>
          </form>
        </div>
      )}

      <div className="divide-y divide-gray-100">
        {clinicalNotes.map((note) => (
          <div key={note.id} className="p-6">
            <div className="flex items-start justify-between mb-2">
              <div className="flex items-center space-x-2">
                <span className="text-sm font-medium text-gray-900">
                  {note.category}
                </span>
                {note.priority && (
                  <span
                    className={`px-2 py-0.5 text-xs font-medium rounded-full ${getPriorityColor(
                      note.priority
                    )}`}
                  >
                    {note.priority} Priority
                  </span>
                )}
              </div>
              <div className="text-sm text-gray-500">
                {formatDate(note.date)}
              </div>
            </div>
            <p className="text-gray-600 mb-2">{note.content}</p>
            <div className="text-sm text-gray-500">By: {note.doctor}</div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default ClinicalNotesSection;
